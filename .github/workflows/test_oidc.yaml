name: Terraform Apply and Destroy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action (apply or destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for OIDC to request the GitHub JWT
      issues: write        # Required to create issue comments
      pull-requests: write  # Required to interact with pull requests
      contents: read       # Required for actions/checkout
    defaults:
      run:
        working-directory: ./terraform

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.2"
          # terraform_wrapper: false # Disable wrapper to capture plan output

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # Updated to latest stable version
        env:
          AWS_REGION: "eu-west-2"
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }} # Replace with your IAM role ARN
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActionsSession

      # Run terraform fmt -check
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: false # Fail if formatting is incorrect

      # Initialize Terraform
      - name: Terraform Init
        id: init
        run: terraform init

      # Run terraform validate
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      # Generate Terraform plan and capture output
      - name: Terraform Plan
        id: plan
        run: |
          if [ "${{ github.event.inputs.action || 'apply' }}" == "destroy" ]; then
            terraform plan -destroy -out=tfplan -no-color > plan-output.txt
          else
            terraform plan -out=tfplan -no-color > plan-output.txt
          fi
        continue-on-error: true # Allow plan to fail for PRs to show changes

      # Add a comment to pull requests with plan results
      - name: Add Plan Comment
        id: comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('terraform/plan-output.txt', 'utf8');
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform\n${planOutput}\n\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      # Apply or Destroy (only for push or workflow_dispatch)
      - name: Terraform Apply or Destroy
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        run: |
          if [ "${{ github.event.inputs.action || 'apply' }}" == "destroy" ]; then
            terraform destroy -auto-approve
          else
            terraform apply -auto-approve tfplan
          fi

#arn:aws:iam::339713055209:role/test-oidc-role