# name: "Terraform Infrastructure Change Management Pipeline with GitHub Actions"

# on:
#   push:
#     branches:
#       - main
      
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name:  Checkout the repository to the runner
#         uses: actions/checkout@v4
#       # Set up Terraform
#       - name: Setup Terraform  with specified version on the runner
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: 1.5.7

#       # Configure AWS credentials
#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Initialize terraform scripts
#         run: terraform init

#       # - name: formatting terraform script
#       #   run: terraform fmt

#       # - name: validating terraform script
#       #   run: terraform validate

#       - name: applying terraform script
#         run: terraform destroy --auto-approve


# name: Deploy or Destroy Terraform Infrastructure

# on:
#   # push:
#   #   branches:
#   #     - main
#   # pull_request:
#   #   branches:
#   #     - main
#   workflow_dispatch:
#     inputs:
#       destroy:
#         description: 'Set to "true" to destroy infrastructure'
#         required: false
#         default: 'true'
#         type: boolean

# jobs:
#   terraform:
#     runs-on: ubuntu-latest

#     steps:
#       # Checkout the repository
#       - name: Checkout code
#         uses: actions/checkout@v4

#       # Set up Terraform
#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: 1.5.7

#       # Configure AWS credentials
#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       # Initialize Terraform
#       - name: Terraform Init
#         run: terraform init

#       # Validate Terraform configuration
#       - name: Terraform Validate
#         run: terraform validate

#       # Generate Terraform plan (only for apply)
#       - name: Terraform Plan
#         if: github.event_name != 'workflow_dispatch' || github.event.inputs.destroy != 'true'
#         run: terraform plan -out=tfplan 

#       # Apply Terraform changes (on push to main or workflow_dispatch with destroy=false)
#       - name: Terraform Apply
#         if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' && github.event.inputs.destroy != 'true'
#         run: terraform apply -auto-approve tfplan 
#       # Destroy Terraform infrastructure (on workflow_dispatch with destroy=true)
#       - name: Terraform Destroy
#         if: github.event_name == 'workflow_dispatch' && github.event.inputs.destroy == 'true'
#         run: terraform destroy -auto-approve 